{% comment %}
  Renders product buy-buttons.
  Accepts:
  - product: {Object} product object.
  - block: {Object} passing the block information.
  - product_form_id: {String} product form id.
  - section_id: {String} id of section to which this snippet belongs.
  - show_pickup_availability: {Boolean} for the pickup availability. If true the pickup availability is rendered, false - not rendered (optional).

  Usage:
  {% render 'buy-buttons', block: block, product: product, product_form_id: product_form_id, section_id: section.id, show_pickup_availability: true %}
{% endcomment %}
<div {{ block.shopify_attributes }}>
  {%- if product != blank -%}
    {%- liquid
      assign gift_card_recipient_feature_active = false
      if block.settings.show_gift_card_recipient and product.gift_card?
        assign gift_card_recipient_feature_active = true
      endif

      assign show_dynamic_checkout = false
      if block.settings.show_dynamic_checkout and gift_card_recipient_feature_active == false
        assign show_dynamic_checkout = true
      endif
    -%}

    <product-form
      class="product-form"
      data-hide-errors="{{ gift_card_recipient_feature_active }}"
      data-section-id="{{ section.id }}"
    >
      <div class="product-form__error-message-wrapper" role="alert" hidden>
        <span class="svg-wrapper">
          {{- 'icon-error.svg' | inline_asset_content -}}
        </span>
        <span class="product-form__error-message"></span>
      </div>

      {%- form 'product',
        product,
        id: product_form_id,
        class: 'form',
        novalidate: 'novalidate',
        data-type: 'add-to-cart-form'
      -%}
        <input
          type="hidden"
          name="id"
          value="{{ product.selected_or_first_available_variant.id }}"
          {% if product.selected_or_first_available_variant.available == false
            or quantity_rule_soldout
            or product.selected_or_first_available_variant == null
          %}
            disabled
          {% endif %}
          class="product-variant-id"
        >

        {%- if gift_card_recipient_feature_active -%}
          {%- render 'gift-card-recipient-form', product: product, form: form, section: section -%}
        {%- endif -%}

        <div class="product-form__buttons">
          {%- liquid
            assign check_against_inventory = true
            if product.selected_or_first_available_variant.inventory_management != 'shopify' or product.selected_or_first_available_variant.inventory_policy == 'continue'
              assign check_against_inventory = false
            endif
            if product.selected_or_first_available_variant.quantity_rule.min > product.selected_or_first_available_variant.inventory_quantity and check_against_inventory
              assign quantity_rule_soldout = true
            endif
          -%}
          <button
            id="ProductSubmitButton-{{ section_id }}"
            type="submit"
            name="add"
            class="product-form__submit button button--full-width {% if show_dynamic_checkout %}button--secondary{% else %}button--primary{% endif %}"
            {% if product.selected_or_first_available_variant.available == false
              or quantity_rule_soldout
              or product.selected_or_first_available_variant == null
            %}
              disabled
            {% endif %}
          >
            <span>
              {%- if product.selected_or_first_available_variant == null -%}
                {{ 'products.product.unavailable' | t }}
              {%- elsif product.selected_or_first_available_variant.available == false or quantity_rule_soldout -%}
                {{ 'products.product.sold_out' | t }}
              {%- else -%}
                {{ 'products.product.add_to_cart' | t }}
              {%- endif -%}
            </span>
            {%- render 'loading-spinner' -%}
          </button>
          {%- if show_dynamic_checkout -%}
            {{ form | payment_button }}
          {%- endif -%}
        </div>
      {%- endform -%}
    </product-form>
  {%- else -%}
    <div class="product-form">
      <div class="product-form__buttons form">
        <button
          type="submit"
          name="add"
          class="product-form__submit button button--full-width button--primary"
          disabled
        >
          {{ 'products.product.sold_out' | t }}
        </button>
      </div>
    </div>
  {%- endif -%}

  {%- if show_pickup_availability -%}
    {{ 'component-pickup-availability.css' | asset_url | stylesheet_tag }}

    {%- assign pick_up_availabilities = product.selected_or_first_available_variant.store_availabilities
      | where: 'pick_up_enabled', true
    -%}

    <pickup-availability
      class="product__pickup-availabilities quick-add-hidden"
      {% if product.selected_or_first_available_variant.available and pick_up_availabilities.size > 0 %}
        available
      {% endif %}
      data-root-url="{{ routes.root_url }}"
      data-variant-id="{{ product.selected_or_first_available_variant.id }}"
      data-has-only-default-variant="{{ product.has_only_default_variant }}"
      data-product-page-color-scheme="gradient color-{{ section.settings.color_scheme }}"
    >
      <template>
        <pickup-availability-preview class="pickup-availability-preview">
          <span class="svg-wrapper">
            {{- 'icon-unavailable.svg' | inline_asset_content -}}
          </span>
          <div class="pickup-availability-info">
            <p class="caption-large">{{ 'products.product.pickup_availability.unavailable' | t }}</p>
            <button class="pickup-availability-button link link--text underlined-link">
              {{ 'products.product.pickup_availability.refresh' | t }}
            </button>
          </div>
        </pickup-availability-preview>
      </template>
    </pickup-availability>

    <script src="{{ 'pickup-availability.js' | asset_url }}" defer="defer"></script>
  {%- endif -%}
</div>

<style>
  /* Add to Cart Button Styling - Add this to your existing CSS */

/* Override default Shopify button styles for add to cart */
.product-form__submit.button {
  /* Reset default styles */
  background: linear-gradient(135deg, #007aff, #0056d6) !important;
  color: white !important;
  border: none !important;
  padding: 16px 32px !important;
  border-radius: 12px !important;
  font-size: 16px !important;
  font-weight: 600 !important;
  cursor: pointer !important;
  transition: all 0.3s ease !important;
  box-shadow: 0 4px 15px rgba(0, 122, 255, 0.3) !important;
  width: 100% !important;
  min-height: auto !important;
  text-transform: none !important;
  letter-spacing: normal !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  gap: 8px !important;
}

.product-form__submit.button:hover:not(:disabled) {
  transform: translateY(-2px) !important;
  box-shadow: 0 8px 25px rgba(0, 122, 255, 0.4) !important;
  background: linear-gradient(135deg, #0056d6, #004bb5) !important;
}

.product-form__submit.button:active:not(:disabled) {
  transform: translateY(0) !important;
}

/* Disabled state styling */
.product-form__submit.button:disabled {
  background: #d2d2d7 !important;
  color: #86868b !important;
  cursor: not-allowed !important;
  transform: none !important;
  box-shadow: none !important;
}

/* Loading spinner styling when adding to cart */
.product-form__submit .loading__spinner {
  width: 18px !important;
  height: 18px !important;
}

/* Dynamic checkout button (Buy it now) styling */
.shopify-payment-button__button--unbranded {
  background: linear-gradient(135deg, #34c759, #30a14e) !important;
  color: white !important;
  border: none !important;
  padding: 16px 32px !important;
  border-radius: 12px !important;
  font-size: 16px !important;
  font-weight: 600 !important;
  cursor: pointer !important;
  transition: all 0.3s ease !important;
  box-shadow: 0 4px 15px rgba(52, 199, 89, 0.3) !important;
  width: 100% !important;
  margin-top: 12px !important;
}

.shopify-payment-button__button--unbranded:hover {
  transform: translateY(-2px) !important;
  box-shadow: 0 8px 25px rgba(52, 199, 89, 0.4) !important;
  background: linear-gradient(135deg, #30a14e, #28a745) !important;
}

/* Ensure the product form buttons container has proper spacing */
.product-form__buttons {
  display: flex !important;
  flex-direction: column !important;
  gap: 0 !important;
}

/* Style the add to cart section container to match other sections */
.add-to-cart-section {
  border-radius: 20px !important;
  padding: 0 !important;
  width: 418px;
}

/* Error message styling to match the design */
.product-form__error-message-wrapper {
  background: #ffebee !important;
  border: 2px solid #f44336 !important;
  border-radius: 12px !important;
  padding: 12px 16px !important;
  margin-bottom: 16px !important;
  color: #c62828 !important;
  font-size: 14px !important;
  font-weight: 500 !important;
}

.product-form__error-message-wrapper .svg-wrapper {
  display: inline-flex !important;
  align-items: center !important;
  margin-right: 8px !important;
}

/* Pickup availability styling */
.pickup-availability-preview {
  background: white !important;
  border: 2px solid #d2d2d7 !important;
  border-radius: 12px !important;
  padding: 16px !important;
  margin-top: 16px !important;
  transition: border-color 0.3s ease !important;
}

.pickup-availability-preview:hover {
  border-color: #007aff !important;
}

.pickup-availability-button {
  color: #007aff !important;
  font-weight: 600 !important;
  text-decoration: none !important;
}

.pickup-availability-button:hover {
  color: #0056d6 !important;
  text-decoration: underline !important;
}

/* Mobile responsiveness */
@media (max-width: 768px) {
  .product-form__submit.button {
    padding: 14px 24px !important;
    font-size: 16px !important;
  }
  
  .shopify-payment-button__button--unbranded {
    padding: 14px 24px !important;
    font-size: 16px !important;
  }
}
</style>
